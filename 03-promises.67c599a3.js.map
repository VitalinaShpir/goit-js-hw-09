{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CAAEC,SAAU,eAEjC,MAAMC,EAAWC,SAASC,cAAc,SAClCC,EAAYF,SAASC,cAAc,kBACnCE,EAAWH,SAASC,cAAc,iBAClCG,EAAaJ,SAASC,cAAc,mBAE1C,SAASI,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAaC,KAAKC,SAAW,GAC7BC,EAAS,C,SAAEhB,E,MAAUQ,GAEvBK,EACFH,EAAQM,GAERL,EAAOK,EAAO,GAEfR,EAAM,G,CAIbP,EAASgB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOjB,EAAUkB,OAClC,MAAMC,EAAYF,OAAOhB,EAASiB,OAC5BE,EAAcH,OAAOf,EAAWgB,OAEtCrB,EAASwB,QAET,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCnB,EAAcmB,EAAGN,GACdO,MAAK,EAAC3B,SAAEA,EAAQQ,MAAEA,MACjBX,EAAAF,GAASG,OAAO8B,QAAQ,qBAAqB5B,QAAeQ,MAAU,IAGvEqB,OAAM,EAAC7B,SAAEA,EAAQQ,MAAEA,MAClBX,EAAAF,GAASG,OAAOgC,QAAQ,oBAAoB9B,QAAeQ,MAAU,IAGzEY,GAAcG,C,IAIlBQ,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({ position: 'center-top' });\n\nconst formItem = document.querySelector('.form');\nconst delayItem = document.querySelector('[name=\"delay\"]');\nconst stepItem = document.querySelector('[name=\"step\"]');\nconst amountItem = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canFulfill = Math.random() > 0.3;\n      const result = { position, delay };\n\n      if (canFulfill) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\nformItem.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let delayValue = Number(delayItem.value);\n  const stepValue = Number(stepItem.value);\n  const amountValue = Number(amountItem.value);\n\n  formItem.reset();\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += stepValue;\n  }\n}\n\nconsole.log('hello');\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","position","$47d4ff9957288465$var$formItem","document","querySelector","$47d4ff9957288465$var$delayItem","$47d4ff9957288465$var$stepItem","$47d4ff9957288465$var$amountItem","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","setTimeout","canFulfill","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","reset","i","then","success","catch","failure","console","log"],"version":3,"file":"03-promises.67c599a3.js.map"}
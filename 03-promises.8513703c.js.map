{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CAAEC,SAAU,eAEjC,IAAMC,EAAWC,SAASC,cAAc,SAClCC,EAAYF,SAASC,cAAc,kBACnCE,EAAWH,SAASC,cAAc,iBAClCG,EAAaJ,SAASC,cAAc,mBAE1C,SAASI,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAaC,KAAKC,SAAW,GAC7BC,EAAS,CAAEhB,WAAUQ,SAEvBK,EACFH,EAAQM,GAERL,EAAOK,E,GAERR,E,IAIPP,EAASgB,iBAAiB,UAE1B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOjB,EAAUkB,OAC5BC,EAAYF,OAAOhB,EAASiB,OAC5BE,EAAcH,OAAOf,EAAWgB,OAEtCrB,EAASwB,QAET,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCnB,EAAcmB,EAAGN,GACdO,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUQ,EAAKoB,EAALpB,MACjBX,EAAAF,GAASG,OAAO+B,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAANtB,EAAM,M,IAGnEuB,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUQ,EAAKoB,EAALpB,MAClBX,EAAAF,GAASG,OAAOkC,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAANtB,EAAM,M,IAGrEY,GAAcG,C,IAIlBU,QAAQC,IAAI,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({ position: 'center-top' });\n\nconst formItem = document.querySelector('.form');\nconst delayItem = document.querySelector('[name=\"delay\"]');\nconst stepItem = document.querySelector('[name=\"step\"]');\nconst amountItem = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canFulfill = Math.random() > 0.3;\n      const result = { position, delay };\n\n      if (canFulfill) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\nformItem.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let delayValue = Number(delayItem.value);\n  const stepValue = Number(stepItem.value);\n  const amountValue = Number(amountItem.value);\n\n  formItem.reset();\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += stepValue;\n  }\n}\n\nconsole.log('hello');\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","position","$ce04d3a99e08e73b$var$formItem","document","querySelector","$ce04d3a99e08e73b$var$delayItem","$ce04d3a99e08e73b$var$stepItem","$ce04d3a99e08e73b$var$amountItem","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","canFulfill","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","reset","i","then","param","success","concat","catch","failure","console","log"],"version":3,"file":"03-promises.8513703c.js.map"}